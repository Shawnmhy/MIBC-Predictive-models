xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
jpeg('./local_pts_pattern.jpeg', units="in", width=5, height=5, res=300)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size = 5) +
theme_bw() +
geom_polygon(aes(Region_HE[[2]][,1]/1000, Region_HE[[2]][,2]/1000), color = 'black', fill = NA) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
dev.off()
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
plot( pts$x, pts$y )
segments( r$x[i], r$y[i], r$x[j], r$y[j], col="grey" )
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
segments( r$x[i], r$y[i], r$x[j], r$y[j], lwd = 2 )
ggplot() +
geom_point(shape = 21, aes(pts$x, pts$y), color = 'black', fill = '#F8B3BD') +
theme_bw() +
geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
plot( pts$x, pts$y )
segments( r$x[i], r$y[i], r$x[j], r$y[j], col="grey" )
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
segments( r$x[i], r$y[i], r$x[j], r$y[j], lwd = 2 )
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
ggplot() +
geom_point(shape = 21, aes(pts$x, pts$y), color = 'black', fill = '#F8B3BD') +
theme_bw() +
geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
ggplot() +
geom_point(shape = 21, aes(pts$x, pts$y), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
ggplot() +
geom_point(shape = 21, aes(pts$x, pts$y), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
ggplot() +
geom_point(shape = 21, aes(pts$x, pts$y), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
#------ after run the delaunay clustering, run this to plot the unthresholded plot
jpeg('./delauney_clus_unthresh.jpeg', units="in", width=5, height=5, res=300)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
dev.off()
#------ after run the delaunay clustering, run this to plot the unthresholded plot
jpeg('./delauney_clus_unthresh.jpeg', units="in", width=5, height=5, res=300)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
dev.off()
#------ after run the delaunay clustering, run this to plot the unthresholded plot
jpeg('./delauney_clus_unthresh.jpeg', units="in", width=5, height=5, res=300)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
dev.off()
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
#------ after run the delaunay clustering, run this to plot the unthresholded plot
jpeg('./delauney_clus_unthresh.jpeg', units="in", width=5, height=5, res=300)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
dev.off()
segments( r$x[i], r$y[i], r$x[j], r$y[j], col="grey" )
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
segments( r$x[i], r$y[i], r$x[j], r$y[j], lwd = 2 )
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 0.5) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
jpeg('./delauney_clus_thresh.jpeg', units="in", width=5, height=5, res=300)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
dev.off()
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
# run this so grey and black can appear at the same time
r.thresh <- r
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
segments( r$x[i], r$y[i], r$x[j], r$y[j], col="grey" )
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
segments( r$x[i], r$y[i], r$x[j], r$y[j], lwd = 2 )
# run this so grey and black can appear at the same time
r.thresh <- r
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r.thresh$x[i]/1000, y = r.thresh$y[i]/1000, xend = r.thresh$x[j]/1000, yend = r.thresh$y[j]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r.unthresh$x[i]/1000, y = r.unthresh$y[i]/1000, xend = r.unthresh$x[j]/1000, yend = r.unthresh$y[j]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
r.unthresh <- r
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
r.unthresh <- r
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r.unthresh$x[i]/1000, y = r.unthresh$y[i]/1000, xend = r.unthresh$x[j]/1000, yend = r.unthresh$y[j]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'gray', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
r.unthresh <- r # run this so grey and black can appear at the same time
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r.unthresh$x[i]/1000, y = r.unthresh$y[i]/1000, xend = r.unthresh$x[j]/1000, yend = r.unthresh$y[j]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
View(r.unthresh)
View(r)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
#geom_segment(aes(x = r.unthresh$x[i]/1000, y = r.unthresh$y[i]/1000, xend = r.unthresh$x[j]/1000, yend = r.unthresh$y[j]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r.unthresh$x[i]/1000, y = r.unthresh$y[i]/1000, xend = r.unthresh$x[j]/1000, yend = r.unthresh$y[j]/1000), color = 'grey', size = 1) +
#geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
r <- tri.mesh(pts$x, pts$y)
k <- seq_len( r$tlnew - 1 )
i <- r$tlist[k]
j <- r$tlist[r$tlptr[k]]
keep <- i > 0
i <- abs( i[ keep ] )
j <- abs( j[ keep ] )
i.unthresh <- i # run this so grey and black can appear at the same time
j.unthresh <- j # run this so grey and black can appear at the same time
distances <- sqrt( ( r$x[i] - r$x[j] ) ^ 2 + ( r$y[i] - r$y[j] ) ^ 2 )
threshold <- 15  # Choose the threshold manually
i <- i[ distances < threshold ]
j <- j[ distances < threshold ]
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i.unthresh]/1000, y = r.unthresh$y[i.unthresh]/1000, xend = r.unthresh$x[j.unthresh]/1000, yend = r.unthresh$y[j.unthresh]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
jpeg('./delauney_clus_thresh.jpeg', units="in", width=5, height=5, res=300)
ggplot() +
geom_point(shape = 21, aes(pts$x/1000, pts$y/1000), color = 'black', fill = '#F8B3BD', size =5) +
theme_bw() +
geom_segment(aes(x = r$x[i.unthresh]/1000, y = r.unthresh$y[i.unthresh]/1000, xend = r.unthresh$x[j.unthresh]/1000, yend = r.unthresh$y[j.unthresh]/1000), color = 'grey', size = 1) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1, 0.7) +
xlim(0.7, 1) +
theme(axis.title = element_text(size = 30), axis.text = element_text(size = 25), panel.border = element_rect(size = 4))
dev.off()
Dual_NodeList <- cbind(seq(1, nrow(pts)),  pts)
colnames(Dual_NodeList) <- c('nodes', 'x', 'y')
Dual_EdgeList <- data.frame(cbind(i, j))
colnames(Dual_EdgeList) <- c('col1', 'col2')
Dual_EdgeList <- Dual_EdgeList %>%
mutate(from = pmin(col1, col2),
to = pmax(col1, col2)) %>%
distinct(from, to)
colnames(Dual_EdgeList) <- c('from', 'to')
# generate initial network
g <- graph_from_data_frame(vertices = Dual_NodeList, d= Dual_EdgeList, directed = FALSE)
#plot(g, vertex.size = 1, vertex.label = NA)
# clustering
comp <- components(g)
comp_list <- lapply(seq_along(comp$csize)[comp$csize > 1], function(x)
V(g)$name[comp$membership %in% x])
# remove low density trees
list_id <- 1
cluster_posList <- matrix(nrow = 0, ncol = 3)
while(list_id <= length(comp_list)){
for(item in comp_list[[list_id]]){
# find all rows which contain the member
# get the member pos, unit: mm^2
item_x <- as.numeric(Dual_NodeList[Dual_NodeList$nodes == item,]['x'])
item_y <- as.numeric(Dual_NodeList[Dual_NodeList$nodes == item,]['y'])
cluster_posList <- rbind(cluster_posList, cbind(item_x, item_y, list_id))
}
list_id <-  list_id + 1
}
cluster_posList <- data.frame(cluster_posList)
ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x, cluster_posList$item_y), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
#geom_segment(aes(x = r$x[I], y = r$y[I], xend = r$x[J], yend = r$y[J]), color = 'gray', size = 0.5) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
#ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x, cluster_posList$item_y), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
#ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x, cluster_posList$item_y), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
#ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x, cluster_posList$item_y), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1)) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
#ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x, cluster_posList$item_y), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x, cluster_posList$item_y), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x/1000, cluster_posList$item_y/1000), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,um') +
ylab('y,um') +
ylim(1400, 0) +
xlim(0, 1400) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
ggplot() +
geom_point(shape = 21, aes(cluster_posList$item_x/1000, cluster_posList$item_y/1000), color = as.factor(cluster_posList$list_id)) +
theme_bw() +
#geom_segment(aes(x = r$x[i], y = r$y[i], xend = r$x[j], yend = r$y[j]), color = 'gray', size = 0.5) +
geom_segment(aes(x = r$x[i]/1000, y = r$y[i]/1000, xend = r$x[j]/1000, yend = r$y[j]/1000), color = 'black', size = 1) +
xlab('x,mm') +
ylab('y,mm') +
ylim(1.4, 0) +
xlim(0, 1.4) +
theme(axis.title = element_text(size =40), axis.text = element_text(size =35))
