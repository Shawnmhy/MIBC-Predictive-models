0,  size*0.454, -size*0.454, 0) +
xlab('x,mm')+
ylab('y,mm')
cellCounts <- nrow(pts_core[pts_core$Centroid.X.µm >= x.coord & pts_core$Centroid.X.µm <=x.coord + 100 & pts_core$Centroid.Y.µm >= y.coord - 100 & pts_core$Centroid.Y.µm <= y.coord,])
# with cross sign
#jpeg(paste('~/Desktop/TMA_QC/HE/', image_id , '_sign.jpeg', sep = ''), )
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id ,'_cellCounts =', cellCounts, '_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
geom_point(data = pts_core, aes(Centroid.X.µm, Centroid.Y.µm), color = 'green', shape = 3, size = 0.4)+
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
#without cross sign
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id , '_no_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
image_id <- image_id + 1
}
}
}
id
for(marker.id in seq(1,9)){
# IHC
#id <- 1
IHC <- switch(id, 'Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
print(IHC)
IHC.path <- switch(id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
}
for(marker.id in seq(1,9)){
# IHC
#id <- 1
IHC <- switch(id, c('Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu'))
print(IHC)
IHC.path <- switch(id, c('Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu'))
}
for(marker.id in 1:9){
# IHC
#id <- 1
IHC <- switch(id, c('Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu'))
print(IHC)
IHC.path <- switch(id, c('Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu'))
}
for(marker.id in 1:9){
# IHC
#id <- 1
IHC <- switch(id, 'Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
print(IHC)
IHC.path <- switch(id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
}
for(marker.id in 1:9){
# IHC
IHC <- switch(marker.id, 'Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
print(IHC)
IHC.path <- switch(marker.id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
}
for(marker.id in 1:9){
# IHC
#id <- 1
IHC <- switch(id, 'Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
IHC.path <- switch(id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
# make directory
image_id <- 1
dir.create(paste('~/Desktop/TMA_QC/', IHC, sep = ''))
for(case.id in c(963, 1042)){
# split pts File
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
ptsFile <- ptsFile[ptsFile$Class == 'Positive' | ptsFile$Class == 'Positive: Positive' |  ptsFile$Class == 'Positive: Negative',]
select_status <- sample(seq(1, nrow(ptsFile)), 100)
ptsFile.select <- ptsFile[select_status,]
for(region in 1:nrow(ptsFile.select)){
# get the core name
#region <- 20
#core <- 'A-9'
core <- as.character(ptsFile.select[region,]$TMA.core)
# all points from the core
pts_core <- ptsFile[ptsFile$TMA.core == core,]
# get the centroid coordinates
x.coord <- ptsFile.select[region,]$Centroid.X.µm
y.coord <- ptsFile.select[region,]$Centroid.Y.µm
# read image
Path <- eval(sym(paste('Region.', case.id, '.path', sep = '')))
image <- readJPEG(paste(Path, core, '/', IHC.path,'.jpg', sep =''))
# image size based on set
size <- eval(sym(paste('size_', case.id, sep = '')))
for_plot <-  ggplot() +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc"),interpolate = FALSE),
0,  size*0.454, -size*0.454, 0) +
xlab('x,mm')+
ylab('y,mm')
cellCounts <- nrow(pts_core[pts_core$Centroid.X.µm >= x.coord & pts_core$Centroid.X.µm <=x.coord + 100 & pts_core$Centroid.Y.µm >= y.coord - 100 & pts_core$Centroid.Y.µm <= y.coord,])
# with cross sign
#jpeg(paste('~/Desktop/TMA_QC/HE/', image_id , '_sign.jpeg', sep = ''), )
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id ,'_cellCounts =', cellCounts, '_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
geom_point(data = pts_core, aes(Centroid.X.µm, Centroid.Y.µm), color = 'green', shape = 3, size = 0.4)+
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
#without cross sign
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id , '_no_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
image_id <- image_id + 1
}
}
}
for(marker.id in 1:9){
# IHC
#id <- 1
IHC <- switch(marker.id, 'Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
IHC.path <- switch(marker.id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
# make directory
image_id <- 1
dir.create(paste('~/Desktop/TMA_QC/', IHC, sep = ''))
for(case.id in c(963, 1042)){
# split pts File
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
ptsFile <- ptsFile[ptsFile$Class == 'Positive' | ptsFile$Class == 'Positive: Positive' |  ptsFile$Class == 'Positive: Negative',]
select_status <- sample(seq(1, nrow(ptsFile)), 100)
ptsFile.select <- ptsFile[select_status,]
for(region in 1:nrow(ptsFile.select)){
# get the core name
#region <- 20
#core <- 'A-9'
core <- as.character(ptsFile.select[region,]$TMA.core)
# all points from the core
pts_core <- ptsFile[ptsFile$TMA.core == core,]
# get the centroid coordinates
x.coord <- ptsFile.select[region,]$Centroid.X.µm
y.coord <- ptsFile.select[region,]$Centroid.Y.µm
# read image
Path <- eval(sym(paste('Region.', case.id, '.path', sep = '')))
image <- readJPEG(paste(Path, core, '/', IHC.path,'.jpg', sep =''))
# image size based on set
size <- eval(sym(paste('size_', case.id, sep = '')))
for_plot <-  ggplot() +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc"),interpolate = FALSE),
0,  size*0.454, -size*0.454, 0) +
xlab('x,mm')+
ylab('y,mm')
cellCounts <- nrow(pts_core[pts_core$Centroid.X.µm >= x.coord & pts_core$Centroid.X.µm <=x.coord + 100 & pts_core$Centroid.Y.µm >= y.coord - 100 & pts_core$Centroid.Y.µm <= y.coord,])
# with cross sign
#jpeg(paste('~/Desktop/TMA_QC/HE/', image_id , '_sign.jpeg', sep = ''), )
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id ,'_cellCounts =', cellCounts, '_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
geom_point(data = pts_core, aes(Centroid.X.µm, Centroid.Y.µm), color = 'green', shape = 3, size = 0.4)+
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
#without cross sign
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id , '_no_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
image_id <- image_id + 1
}
}
}
# split pts File
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
ptsFile <- ptsFile[ptsFile$Class == 'Positive' | ptsFile$Class == 'Positive: Positive' |  ptsFile$Class == 'Positive: Negative',]
select_status <- sample(seq(1, nrow(ptsFile)), 100)
select_status <- sample(seq(1, nrow(ptsFile)), 100)
ptsFile
View(all.pts)
ptsFile <- all.pts[all.pts$Image == IHC, ]
View(ptsFile)
View(all.pts)
unique(all.pts$Image)
for(marker.id in 1:9){
# IHC
#id <- 1
IHC <- switch(marker.id, 'Ki67', 'GATA3', 'CK20', 'CK56', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
IHC.path <- switch(marker.id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
# make directory
image_id <- 1
dir.create(paste('~/Desktop/TMA_QC/', IHC, sep = ''))
for(case.id in c(963, 1042)){
# split pts File
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
ptsFile <- ptsFile[ptsFile$Class == 'Positive' | ptsFile$Class == 'Positive: Positive' |  ptsFile$Class == 'Positive: Negative',]
select_status <- sample(seq(1, nrow(ptsFile)), 100)
ptsFile.select <- ptsFile[select_status,]
for(region in 1:nrow(ptsFile.select)){
# get the core name
#region <- 20
#core <- 'A-9'
core <- as.character(ptsFile.select[region,]$TMA.core)
# all points from the core
pts_core <- ptsFile[ptsFile$TMA.core == core,]
# get the centroid coordinates
x.coord <- ptsFile.select[region,]$Centroid.X.µm
y.coord <- ptsFile.select[region,]$Centroid.Y.µm
# read image
Path <- eval(sym(paste('Region.', case.id, '.path', sep = '')))
image <- readJPEG(paste(Path, core, '/', IHC.path,'.jpg', sep =''))
# image size based on set
size <- eval(sym(paste('size_', case.id, sep = '')))
for_plot <-  ggplot() +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc"),interpolate = FALSE),
0,  size*0.454, -size*0.454, 0) +
xlab('x,mm')+
ylab('y,mm')
cellCounts <- nrow(pts_core[pts_core$Centroid.X.µm >= x.coord & pts_core$Centroid.X.µm <=x.coord + 100 & pts_core$Centroid.Y.µm >= y.coord - 100 & pts_core$Centroid.Y.µm <= y.coord,])
# with cross sign
#jpeg(paste('~/Desktop/TMA_QC/HE/', image_id , '_sign.jpeg', sep = ''), )
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id ,'_cellCounts =', cellCounts, '_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
geom_point(data = pts_core, aes(Centroid.X.µm, Centroid.Y.µm), color = 'green', shape = 3, size = 0.4)+
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
#without cross sign
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id , '_no_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
image_id <- image_id + 1
}
}
}
View(IHC_ptsFile_1042)
unique(IHCIHC_ptsFile_1042$Images)
unique(IHC_ptsFile_1042$Images)
unique(IHC_ptsFile_1042$Image)
unique(IHC_ptsFile_963$Image)
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "uv-GATA3"] <- "GATA3"
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "Cyclin"] <- "cyclin"
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "P16"] <- "p16"
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "P53"] <- "p53"
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "p63"] <- "P63"
unique(IHC_ptsFile_1042$Image)
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "CK5-6"] <- "CK56"
IHC_ptsFile_963$Image[IHC_ptsFile_963$Image == "CK56"] <- "CK5-6"
unique(IHC_ptsFile_963$Image)
for(marker.id in 1:9){
# IHC
#id <- 1
IHC <- switch(marker.id, 'Ki67', 'GATA3', 'CK20', 'CK56', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
# make directory
image_id <- 1
dir.create(paste('~/Desktop/TMA_QC/', IHC, sep = ''))
for(case.id in c(963, 1042)){
# split pts File
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
ptsFile <- ptsFile[ptsFile$Class == 'Positive' | ptsFile$Class == 'Positive: Positive' |  ptsFile$Class == 'Positive: Negative',]
select_status <- sample(seq(1, nrow(ptsFile)), 100)
ptsFile.select <- ptsFile[select_status,]
for(region in 1:nrow(ptsFile.select)){
# get the core name
#region <- 20
#core <- 'A-9'
core <- as.character(ptsFile.select[region,]$TMA.core)
# all points from the core
pts_core <- ptsFile[ptsFile$TMA.core == core,]
# get the centroid coordinates
x.coord <- ptsFile.select[region,]$Centroid.X.µm
y.coord <- ptsFile.select[region,]$Centroid.Y.µm
# read image
Path <- eval(sym(paste('Region.', case.id, '.path', sep = '')))
image <- readJPEG(paste(Path, core, '/', IHC,'.jpg', sep =''))
# image size based on set
size <- eval(sym(paste('size_', case.id, sep = '')))
for_plot <-  ggplot() +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc"),interpolate = FALSE),
0,  size*0.454, -size*0.454, 0) +
xlab('x,mm')+
ylab('y,mm')
cellCounts <- nrow(pts_core[pts_core$Centroid.X.µm >= x.coord & pts_core$Centroid.X.µm <=x.coord + 100 & pts_core$Centroid.Y.µm >= y.coord - 100 & pts_core$Centroid.Y.µm <= y.coord,])
# with cross sign
#jpeg(paste('~/Desktop/TMA_QC/HE/', image_id , '_sign.jpeg', sep = ''), )
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id ,'_cellCounts =', cellCounts, '_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
geom_point(data = pts_core, aes(Centroid.X.µm, Centroid.Y.µm), color = 'green', shape = 3, size = 0.4)+
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
#without cross sign
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id , '_no_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
image_id <- image_id + 1
}
}
}
# split pts File
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
ptsFile <- ptsFile[ptsFile$Class == 'Positive' | ptsFile$Class == 'Positive: Positive' |  ptsFile$Class == 'Positive: Negative',]
ptsFile <- all.pts[all.pts$Image == IHC, ]
unique(all.pts$Image)
case.id
IHC_ptsFile_963$Image[IHC_ptsFile_963$Image == "CK56"] <- "CK5-6"
# split pts xFile
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
unique(all.pts$Image)
metaFile <- read.csv('~/Desktop/TMA_963/TMA - Coordinates/IHC_Core_Stat.csv')
metaFile$Image <- str_split_fixed(metaFile$Image, '_', n = 6)[,4]
metaFile$Image[metaFile$Image == "uv-GATA3"] <- "GATA3"
metaFile$Image[metaFile$Image == "CyclinD1"] <- "Cyclin"
# step 1: read file -> to get classifications
IHC_allPts <- read.csv('~/Desktop/TMA_963/TMA - Coordinates/IHC_Nucleus_Centroids.csv', header = TRUE)
# (clean the dataframe)
IHC_allPts$Class <- as.character(IHC_allPts$Class)
# split the string
IHC_allPts$Image <- str_split_fixed(IHC_allPts$Image, "_", 6)[,4]
# replace CK5-6 to CK56 and uv-GATA3 to GATA3
IHC_allPts$Image <- replace(IHC_allPts$Image, which(IHC_allPts[,1] == 'uv-GATA3'), 'GATA3')
IHC_allPts$Image <- replace(IHC_allPts$Image, which(IHC_allPts[,1] == 'CK5-6'), 'CK56')
class(IHC_allPts$Centroid.X.µm)
for(core in CORE.963$x){
#id <- 1
#coreName <- 'A-9'
# create folder
for(id in 1:9){
IHC <- switch(id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
# subset DF, convert to pixel unit
ptsFile <- IHC_allPts[IHC_allPts$TMA.core == core & IHC_allPts$Image == IHC, c(2,4:5)]
if(nrow(ptsFile) != 0){
# get ref points
ref_x <- metaFile[metaFile$Name == core & metaFile$Image == IHC,]$Centroid.X.µm - 2908*0.454/2 # unit: pixel
ref_y <- metaFile[metaFile$Name == core & metaFile$Image == IHC,]$Centroid.Y.µm - 2908*0.454/2 # unit: pixel
# get the rescaled points
rescale_x <- ptsFile$Centroid.X.µm - ref_x
rescale_y <- ptsFile$Centroid.Y.µm - ref_y
# get type
IHC_allPts[IHC_allPts$TMA.core == core & IHC_allPts$Image == IHC, 4:5] <- cbind(rescale_x, rescale_y)
}
}
}
IHC_ptsFile_963 <- IHC_allPts
IHC_ptsFile_963 <- IHC_ptsFile_963[IHC_ptsFile_963$TMA.core %in% CORE.963$x,]
IHC_ptsFile_963$Image[IHC_ptsFile_963$Image == "CK56"] <- "CK5-6"
Ki67_metaFile <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/Ki67.txt', header = T,sep = '\t')
Ki67_name <- str_split_fixed(Ki67_metaFile$Image, '_', n = 6)
Ki67_metaFile$Image <- Ki67_name[,4]
#----------------------------------#
`uv-GATA3_metaFile` <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/GATA3.txt', header = T,sep = '\t')
GATA3_name <- str_split_fixed(`uv-GATA3_metaFile`$Image, '_', n = 6)
`uv-GATA3_metaFile`$Image <- GATA3_name[,4]
#----------------------------------#
Her2Neu_metaFile <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/Her2Neu.txt', header = T,sep = '\t')
Her2Neu_name <- str_split_fixed(Her2Neu_metaFile$Image, '_', n = 6)
Her2Neu_metaFile$Image <- Her2Neu_name[,4]
#----------------------------------#
CK20_metaFile <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/CK20.txt', header = T,sep = '\t')
CK20_name <- str_split_fixed(CK20_metaFile$Image, '_', n = 6)
CK20_metaFile$Image <- CK20_name[,4]
#----------------------------------#
`CK5-6_metaFile` <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/CK5-6.txt', header = T,sep = '\t')
`CK5-6_name` <- str_split_fixed(`CK5-6_metaFile`$Image, '_', n = 6)
`CK5-6_metaFile`$Image <- `CK5-6_name`[,4]
#----------------------------------#
Cyclin_metaFile <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/Cyclin.txt', header = T,sep = '\t')
Cyclin_name <- str_split_fixed(Cyclin_metaFile$Image, '_', n = 6)
Cyclin_metaFile$Image <- Cyclin_name[,4]
#----------------------------------#
P16_metaFile <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/P16.txt', header = T,sep = '\t')
P16_name <- str_split_fixed(P16_metaFile$Image, '_', n = 6)
P16_metaFile$Image <- P16_name[,4]
#----------------------------------#
P53_metaFile <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/P53.txt', header = T,sep = '\t')
P53_name <- str_split_fixed(P53_metaFile$Image, '_', n = 6)
P53_metaFile$Image <- P53_name[,4]
#----------------------------------#
P63_metaFile <- read.delim('~/Desktop/TMA - coregistration/IHC_Core_Centroids/P63.txt', header = T,sep = '\t')
P63_name <- str_split_fixed(P63_metaFile$Image, '_', n = 6)
P63_metaFile$Image <- P63_name[,4]
IHC_ptsFile <- read.csv('~/Desktop/TMA - coregistration/IHC_allCores_Centroids.csv')
# split the image name
ImgName <- str_split_fixed(IHC_ptsFile$Image, '_', n = 6)
# assign new name
IHC_ptsFile$Image <- ImgName[,4]
for(core in CORE.1042$x){
for(id in 1:9){
IHC <- switch(id, 'Ki67', 'uv-GATA3', 'CK20', 'CK5-6', 'Cyclin', 'P16', 'P53', 'P63', 'Her2Neu')
# subset DF, convert to pixel unit
ptsFile <- IHC_ptsFile[IHC_ptsFile$TMA.core == core & IHC_ptsFile$Image == IHC, 4:5]
if(nrow(ptsFile) != 0){
# get ref points
metaFile <- eval(as.symbol(paste(IHC, '_metaFile', sep = '')))
ref_x <- metaFile[metaFile$Name == core,]$Centroid.X.um - 3030*0.454/2 # unit: um
ref_y <- metaFile[metaFile$Name == core,]$Centroid.Y.um - 3030*0.454/2 # unit: um
# get the rescaled points
rescale_x <- ptsFile$Centroid.X.µm - ref_x
rescale_y <- ptsFile$Centroid.Y.µm - ref_y
# save file to Folder
IHC_ptsFile[IHC_ptsFile$TMA.core == core & IHC_ptsFile$Image == IHC, 4:5] <- cbind(rescale_x, rescale_y)
}
}
}
IHC_ptsFile_1042 <- IHC_ptsFile
IHC_ptsFile_1042 <- IHC_ptsFile_1042[IHC_ptsFile_1042$TMA.core %in% CORE.1042$x,]
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "uv-GATA3"] <- "GATA3"
IHC_ptsFile_1042$Image[IHC_ptsFile_1042$Image == "Cyclin"] <- "CyclinD1"
unique(IHC_ptsFile_1042$Image)
unique(IHC_ptsFile_963$Image)
for(marker.id in 4:9){
# IHC
#id <- 1
IHC <- switch(marker.id, 'Ki67', 'GATA3', 'CK20', 'CK5-6', 'CyclinD1', 'P16', 'P53', 'P63', 'Her2Neu')
# make directory
image_id <- 1
dir.create(paste('~/Desktop/TMA_QC/', IHC, sep = ''))
for(case.id in c(963, 1042)){
# split pts xFile
all.pts <- eval(sym(paste('IHC_ptsFile_', case.id, sep = '')))
ptsFile <- all.pts[all.pts$Image == IHC, ]
ptsFile <- ptsFile[ptsFile$Class == 'Positive' | ptsFile$Class == 'Positive: Positive' |  ptsFile$Class == 'Positive: Negative',]
select_status <- sample(seq(1, nrow(ptsFile)), 100)
ptsFile.select <- ptsFile[select_status,]
for(region in 1:nrow(ptsFile.select)){
# get the core name
#region <- 20
#core <- 'A-9'
core <- as.character(ptsFile.select[region,]$TMA.core)
# all points from the core
pts_core <- ptsFile[ptsFile$TMA.core == core,]
# get the centroid coordinates
x.coord <- ptsFile.select[region,]$Centroid.X.µm
y.coord <- ptsFile.select[region,]$Centroid.Y.µm
# read image
Path <- eval(sym(paste('Region.', case.id, '.path', sep = '')))
image <- readJPEG(paste(Path, core, '/', IHC,'.jpg', sep =''))
# image size based on set
size <- eval(sym(paste('size_', case.id, sep = '')))
for_plot <-  ggplot() +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc"),interpolate = FALSE),
0,  size*0.454, -size*0.454, 0) +
xlab('x,mm')+
ylab('y,mm')
cellCounts <- nrow(pts_core[pts_core$Centroid.X.µm >= x.coord & pts_core$Centroid.X.µm <=x.coord + 100 & pts_core$Centroid.Y.µm >= y.coord - 100 & pts_core$Centroid.Y.µm <= y.coord,])
# with cross sign
#jpeg(paste('~/Desktop/TMA_QC/HE/', image_id , '_sign.jpeg', sep = ''), )
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id ,'_cellCounts =', cellCounts, '_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
geom_point(data = pts_core, aes(Centroid.X.µm, Centroid.Y.µm), color = 'green', shape = 3, size = 0.4)+
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
#without cross sign
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id , '_no_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
image_id <- image_id + 1
}
}
}
# read image
Path <- eval(sym(paste('Region.', case.id, '.path', sep = '')))
Path
paste(Path, core, '/', IHC,'.jpg', sep ='')
# with cross sign
#jpeg(paste('~/Desktop/TMA_QC/HE/', image_id , '_sign.jpeg', sep = ''), )
ggsave(filename = paste('~/Desktop/TMA_QC/', IHC,'/ID=', image_id ,'_cellCounts =', cellCounts, '_label.jpeg', sep = ''), move_layers(for_plot, idx = 1L, position = "bottom") +
xlim(x.coord, x.coord+100) +
ylim(y.coord, y.coord-100) +
geom_point(data = pts_core, aes(Centroid.X.µm, Centroid.Y.µm), color = 'green', shape = 3, size = 0.4)+
xlab('x, mm') +
ylab('y, mm') +
coord_equal(),
units="in", width=3, height=3, dpi=300, device = 'png')
